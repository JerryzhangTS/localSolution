/**
 * This class is generated by jOOQ
 */
package library.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import library.Invoice;
import library.Keys;
import library.tables.records.CoverSheetInputRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoverSheetInput extends TableImpl<CoverSheetInputRecord> {

    private static final long serialVersionUID = 202377497;

    /**
     * The reference instance of <code>invoice.cover_sheet_input</code>
     */
    public static final CoverSheetInput COVER_SHEET_INPUT = new CoverSheetInput();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoverSheetInputRecord> getRecordType() {
        return CoverSheetInputRecord.class;
    }

    /**
     * The column <code>invoice.cover_sheet_input.id</code>. 记录唯一ID
     */
    public final TableField<CoverSheetInputRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "记录唯一ID");

    /**
     * The column <code>invoice.cover_sheet_input.bundle_id</code>. 组ID
     */
    public final TableField<CoverSheetInputRecord, String> BUNDLE_ID = createField("bundle_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "组ID");

    /**
     * The column <code>invoice.cover_sheet_input.origin_id</code>. 原始CoverSheet ID
     */
    public final TableField<CoverSheetInputRecord, String> ORIGIN_ID = createField("origin_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "原始CoverSheet ID");

    /**
     * The column <code>invoice.cover_sheet_input.file_name</code>. 文件名
     */
    public final TableField<CoverSheetInputRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "文件名");

    /**
     * The column <code>invoice.cover_sheet_input.input_time</code>. 录入时间
     */
    public final TableField<CoverSheetInputRecord, Timestamp> INPUT_TIME = createField("input_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP(6)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "录入时间");

    /**
     * The column <code>invoice.cover_sheet_input.size</code>. 文件大小
     */
    public final TableField<CoverSheetInputRecord, Long> SIZE = createField("size", org.jooq.impl.SQLDataType.BIGINT, this, "文件大小");

    /**
     * The column <code>invoice.cover_sheet_input.origin_format</code>. 原始文件格式
     */
    public final TableField<CoverSheetInputRecord, String> ORIGIN_FORMAT = createField("origin_format", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "原始文件格式");

    /**
     * The column <code>invoice.cover_sheet_input.format</code>. 文件格式
     */
    public final TableField<CoverSheetInputRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "文件格式");

    /**
     * The column <code>invoice.cover_sheet_input.input_type</code>. 录入类型
     */
    public final TableField<CoverSheetInputRecord, String> INPUT_TYPE = createField("input_type", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "录入类型");

    /**
     * The column <code>invoice.cover_sheet_input.file_type</code>. 文件类型
     */
    public final TableField<CoverSheetInputRecord, String> FILE_TYPE = createField("file_type", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "文件类型");

    /**
     * The column <code>invoice.cover_sheet_input.parse_status</code>. 文件解析类型
     */
    public final TableField<CoverSheetInputRecord, String> PARSE_STATUS = createField("parse_status", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "文件解析类型");

    /**
     * The column <code>invoice.cover_sheet_input.reference</code>. 文件存储ID
     */
    public final TableField<CoverSheetInputRecord, String> REFERENCE = createField("reference", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "文件存储ID");

    /**
     * The column <code>invoice.cover_sheet_input.active_flag</code>. 是否可用
     */
    public final TableField<CoverSheetInputRecord, Short> ACTIVE_FLAG = createField("active_flag", org.jooq.impl.SQLDataType.SMALLINT, this, "是否可用");

    /**
     * The column <code>invoice.cover_sheet_input.input_user_id</code>. 录入用户ID
     */
    public final TableField<CoverSheetInputRecord, String> INPUT_USER_ID = createField("input_user_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "录入用户ID");

    /**
     * The column <code>invoice.cover_sheet_input.input_user_name</code>. 录入用户名
     */
    public final TableField<CoverSheetInputRecord, String> INPUT_USER_NAME = createField("input_user_name", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "录入用户名");

    /**
     * The column <code>invoice.cover_sheet_input.input_tenant_name</code>. 录入公司名
     */
    public final TableField<CoverSheetInputRecord, String> INPUT_TENANT_NAME = createField("input_tenant_name", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "录入公司名");

    /**
     * The column <code>invoice.cover_sheet_input.tenant_id</code>. Tenant ID
     */
    public final TableField<CoverSheetInputRecord, String> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "Tenant ID");

    /**
     * The column <code>invoice.cover_sheet_input.create_time</code>. 创建时间
     */
    public final TableField<CoverSheetInputRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP(6)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>invoice.cover_sheet_input.update_time</code>. 更新时间
     */
    public final TableField<CoverSheetInputRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP(6)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>invoice.cover_sheet_input.create_by</code>. 创建者
     */
    public final TableField<CoverSheetInputRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "创建者");

    /**
     * The column <code>invoice.cover_sheet_input.update_by</code>. 更新者
     */
    public final TableField<CoverSheetInputRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "更新者");

    /**
     * Create a <code>invoice.cover_sheet_input</code> table reference
     */
    public CoverSheetInput() {
        this("cover_sheet_input", null);
    }

    /**
     * Create an aliased <code>invoice.cover_sheet_input</code> table reference
     */
    public CoverSheetInput(String alias) {
        this(alias, COVER_SHEET_INPUT);
    }

    private CoverSheetInput(String alias, Table<CoverSheetInputRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoverSheetInput(String alias, Table<CoverSheetInputRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Invoice.INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CoverSheetInputRecord> getPrimaryKey() {
        return Keys.KEY_COVER_SHEET_INPUT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CoverSheetInputRecord>> getKeys() {
        return Arrays.<UniqueKey<CoverSheetInputRecord>>asList(Keys.KEY_COVER_SHEET_INPUT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoverSheetInput as(String alias) {
        return new CoverSheetInput(alias, this);
    }

    /**
     * Rename this table
     */
    public CoverSheetInput rename(String name) {
        return new CoverSheetInput(name, null);
    }
}
