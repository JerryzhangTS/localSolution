/**
 * This class is generated by jOOQ
 */
package library.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import library.Invoice;
import library.Keys;
import library.tables.records.DistributeTransactionRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 业务事务进程表。
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DistributeTransaction extends TableImpl<DistributeTransactionRecord> {

    private static final long serialVersionUID = 2118748945;

    /**
     * The reference instance of <code>invoice.distribute_transaction</code>
     */
    public static final DistributeTransaction DISTRIBUTE_TRANSACTION = new DistributeTransaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DistributeTransactionRecord> getRecordType() {
        return DistributeTransactionRecord.class;
    }

    /**
     * The column <code>invoice.distribute_transaction.id</code>. 分布式事务唯一标识
     */
    public final TableField<DistributeTransactionRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "分布式事务唯一标识");

    /**
     * The column <code>invoice.distribute_transaction.object_id</code>. 原始对象的id
     */
    public final TableField<DistributeTransactionRecord, String> OBJECT_ID = createField("object_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "原始对象的id");

    /**
     * The column <code>invoice.distribute_transaction.is_async</code>.
     */
    public final TableField<DistributeTransactionRecord, Byte> IS_ASYNC = createField("is_async", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>invoice.distribute_transaction.business_type</code>. 业务类型
     */
    public final TableField<DistributeTransactionRecord, String> BUSINESS_TYPE = createField("business_type", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "业务类型");

    /**
     * The column <code>invoice.distribute_transaction.status</code>. 事务状态：PROCESSING, PERMANENTLY_FAILED, FAILED, SUCCESS
     */
    public final TableField<DistributeTransactionRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CHAR.length(20), this, "事务状态：PROCESSING, PERMANENTLY_FAILED, FAILED, SUCCESS");

    /**
     * The column <code>invoice.distribute_transaction.is_validation_error</code>. 是否验证异常
     */
    public final TableField<DistributeTransactionRecord, Byte> IS_VALIDATION_ERROR = createField("is_validation_error", org.jooq.impl.SQLDataType.TINYINT, this, "是否验证异常");

    /**
     * The column <code>invoice.distribute_transaction.error_code</code>. 错误代码
     */
    public final TableField<DistributeTransactionRecord, String> ERROR_CODE = createField("error_code", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "错误代码");

    /**
     * The column <code>invoice.distribute_transaction.error_message</code>. 错误详细信息
     */
    public final TableField<DistributeTransactionRecord, String> ERROR_MESSAGE = createField("error_message", org.jooq.impl.SQLDataType.CLOB, this, "错误详细信息");

    /**
     * The column <code>invoice.distribute_transaction.retry_time</code>. 重试次数
     */
    public final TableField<DistributeTransactionRecord, Integer> RETRY_TIME = createField("retry_time", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "重试次数");

    /**
     * The column <code>invoice.distribute_transaction.max_retry_time</code>. 最大重试次数
     */
    public final TableField<DistributeTransactionRecord, Integer> MAX_RETRY_TIME = createField("max_retry_time", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("3", org.jooq.impl.SQLDataType.INTEGER)), this, "最大重试次数");

    /**
     * The column <code>invoice.distribute_transaction.param</code>. 参数
     */
    public final TableField<DistributeTransactionRecord, String> PARAM = createField("param", org.jooq.impl.SQLDataType.CLOB, this, "参数");

    /**
     * The column <code>invoice.distribute_transaction.tenant_id</code>.
     */
    public final TableField<DistributeTransactionRecord, String> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.distribute_transaction.user_id</code>.
     */
    public final TableField<DistributeTransactionRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.distribute_transaction.created_by</code>.
     */
    public final TableField<DistributeTransactionRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.distribute_transaction.updated_by</code>.
     */
    public final TableField<DistributeTransactionRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.distribute_transaction.created_time</code>. 创建时间
     */
    public final TableField<DistributeTransactionRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP(6)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>invoice.distribute_transaction.updated_time</code>. 更新时间
     */
    public final TableField<DistributeTransactionRecord, Timestamp> UPDATED_TIME = createField("updated_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00.000000", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>invoice.distribute_transaction.next_schedule_time</code>. 下次定时任务时间
     */
    public final TableField<DistributeTransactionRecord, Timestamp> NEXT_SCHEDULE_TIME = createField("next_schedule_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00.000000", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "下次定时任务时间");

    /**
     * The column <code>invoice.distribute_transaction.time_interval_expression</code>. 定时任务时间计算表达式
     */
    public final TableField<DistributeTransactionRecord, String> TIME_INTERVAL_EXPRESSION = createField("time_interval_expression", org.jooq.impl.SQLDataType.CLOB, this, "定时任务时间计算表达式");

    /**
     * Create a <code>invoice.distribute_transaction</code> table reference
     */
    public DistributeTransaction() {
        this("distribute_transaction", null);
    }

    /**
     * Create an aliased <code>invoice.distribute_transaction</code> table reference
     */
    public DistributeTransaction(String alias) {
        this(alias, DISTRIBUTE_TRANSACTION);
    }

    private DistributeTransaction(String alias, Table<DistributeTransactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private DistributeTransaction(String alias, Table<DistributeTransactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "业务事务进程表。");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Invoice.INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DistributeTransactionRecord> getPrimaryKey() {
        return Keys.KEY_DISTRIBUTE_TRANSACTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DistributeTransactionRecord>> getKeys() {
        return Arrays.<UniqueKey<DistributeTransactionRecord>>asList(Keys.KEY_DISTRIBUTE_TRANSACTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributeTransaction as(String alias) {
        return new DistributeTransaction(alias, this);
    }

    /**
     * Rename this table
     */
    public DistributeTransaction rename(String name) {
        return new DistributeTransaction(name, null);
    }
}
