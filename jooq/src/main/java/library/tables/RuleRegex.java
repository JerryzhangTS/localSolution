/**
 * This class is generated by jOOQ
 */
package library.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import library.Invoice;
import library.Keys;
import library.tables.records.RuleRegexRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleRegex extends TableImpl<RuleRegexRecord> {

    private static final long serialVersionUID = -1621662239;

    /**
     * The reference instance of <code>invoice.rule_regex</code>
     */
    public static final RuleRegex RULE_REGEX = new RuleRegex();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleRegexRecord> getRecordType() {
        return RuleRegexRecord.class;
    }

    /**
     * The column <code>invoice.rule_regex.id</code>.
     */
    public final TableField<RuleRegexRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.rule_regex.rule_id</code>.
     */
    public final TableField<RuleRegexRecord, String> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.rule_regex.field_id</code>.
     */
    public final TableField<RuleRegexRecord, String> FIELD_ID = createField("field_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.rule_regex.expression</code>.
     */
    public final TableField<RuleRegexRecord, String> EXPRESSION = createField("expression", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>invoice.rule_regex.description</code>.
     */
    public final TableField<RuleRegexRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>invoice.rule_regex.level</code>.
     */
    public final TableField<RuleRegexRecord, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>invoice.rule_regex.scope</code>.
     */
    public final TableField<RuleRegexRecord, String> SCOPE = createField("scope", org.jooq.impl.SQLDataType.VARCHAR.length(60), this, "");

    /**
     * Create a <code>invoice.rule_regex</code> table reference
     */
    public RuleRegex() {
        this("rule_regex", null);
    }

    /**
     * Create an aliased <code>invoice.rule_regex</code> table reference
     */
    public RuleRegex(String alias) {
        this(alias, RULE_REGEX);
    }

    private RuleRegex(String alias, Table<RuleRegexRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleRegex(String alias, Table<RuleRegexRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Invoice.INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RuleRegexRecord> getPrimaryKey() {
        return Keys.KEY_RULE_REGEX_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RuleRegexRecord>> getKeys() {
        return Arrays.<UniqueKey<RuleRegexRecord>>asList(Keys.KEY_RULE_REGEX_PRIMARY, Keys.KEY_RULE_REGEX_RULE_REGEX_UNIQUE_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RuleRegexRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RuleRegexRecord, ?>>asList(Keys.FK_REGEX_RULE_ID, Keys.FK_REGEX_FIELD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleRegex as(String alias) {
        return new RuleRegex(alias, this);
    }

    /**
     * Rename this table
     */
    public RuleRegex rename(String name) {
        return new RuleRegex(name, null);
    }
}
