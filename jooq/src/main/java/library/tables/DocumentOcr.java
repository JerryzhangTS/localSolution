/**
 * This class is generated by jOOQ
 */
package library.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import library.Invoice;
import library.Keys;
import library.tables.records.DocumentOcrRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentOcr extends TableImpl<DocumentOcrRecord> {

    private static final long serialVersionUID = 2128628229;

    /**
     * The reference instance of <code>invoice.document_ocr</code>
     */
    public static final DocumentOcr DOCUMENT_OCR = new DocumentOcr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DocumentOcrRecord> getRecordType() {
        return DocumentOcrRecord.class;
    }

    /**
     * The column <code>invoice.document_ocr.id</code>. 唯一标识符
     */
    public final TableField<DocumentOcrRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "唯一标识符");

    /**
     * The column <code>invoice.document_ocr.reference</code>. CoverSheet ID
     */
    public final TableField<DocumentOcrRecord, String> REFERENCE = createField("reference", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "CoverSheet ID");

    /**
     * The column <code>invoice.document_ocr.error_msg</code>. 错误信息
     */
    public final TableField<DocumentOcrRecord, String> ERROR_MSG = createField("error_msg", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "错误信息");

    /**
     * The column <code>invoice.document_ocr.context</code>. Ocr数据内容
     */
    public final TableField<DocumentOcrRecord, String> CONTEXT = createField("context", org.jooq.impl.SQLDataType.CLOB, this, "Ocr数据内容");

    /**
     * The column <code>invoice.document_ocr.template_id</code>. Template ID
     */
    public final TableField<DocumentOcrRecord, String> TEMPLATE_ID = createField("template_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "Template ID");

    /**
     * The column <code>invoice.document_ocr.tenant_id</code>. Tenant ID
     */
    public final TableField<DocumentOcrRecord, String> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "Tenant ID");

    /**
     * The column <code>invoice.document_ocr.create_time</code>. 创建时间
     */
    public final TableField<DocumentOcrRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP(3)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>invoice.document_ocr.update_time</code>. 更新时间
     */
    public final TableField<DocumentOcrRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP(3)", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>invoice.document_ocr.create_by</code>. 创建者
     */
    public final TableField<DocumentOcrRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "创建者");

    /**
     * The column <code>invoice.document_ocr.update_by</code>. 更新者
     */
    public final TableField<DocumentOcrRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "更新者");

    /**
     * The column <code>invoice.document_ocr.is_updated_data</code>. 是否被更新过
     */
    public final TableField<DocumentOcrRecord, Byte> IS_UPDATED_DATA = createField("is_updated_data", org.jooq.impl.SQLDataType.TINYINT, this, "是否被更新过");

    /**
     * Create a <code>invoice.document_ocr</code> table reference
     */
    public DocumentOcr() {
        this("document_ocr", null);
    }

    /**
     * Create an aliased <code>invoice.document_ocr</code> table reference
     */
    public DocumentOcr(String alias) {
        this(alias, DOCUMENT_OCR);
    }

    private DocumentOcr(String alias, Table<DocumentOcrRecord> aliased) {
        this(alias, aliased, null);
    }

    private DocumentOcr(String alias, Table<DocumentOcrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Invoice.INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DocumentOcrRecord> getPrimaryKey() {
        return Keys.KEY_DOCUMENT_OCR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DocumentOcrRecord>> getKeys() {
        return Arrays.<UniqueKey<DocumentOcrRecord>>asList(Keys.KEY_DOCUMENT_OCR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentOcr as(String alias) {
        return new DocumentOcr(alias, this);
    }

    /**
     * Rename this table
     */
    public DocumentOcr rename(String name) {
        return new DocumentOcr(name, null);
    }
}
