/**
 * This class is generated by jOOQ
 */
package library.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import library.Invoice;
import library.Keys;
import library.tables.records.DeleteRecordRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeleteRecord extends TableImpl<DeleteRecordRecord> {

    private static final long serialVersionUID = 577188892;

    /**
     * The reference instance of <code>invoice.delete_record</code>
     */
    public static final DeleteRecord DELETE_RECORD = new DeleteRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeleteRecordRecord> getRecordType() {
        return DeleteRecordRecord.class;
    }

    /**
     * The column <code>invoice.delete_record.id</code>. 唯一标识符
     */
    public final TableField<DeleteRecordRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "唯一标识符");

    /**
     * The column <code>invoice.delete_record.request_id</code>. 请求id
     */
    public final TableField<DeleteRecordRecord, String> REQUEST_ID = createField("request_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "请求id");

    /**
     * The column <code>invoice.delete_record.tenant_id</code>.
     */
    public final TableField<DeleteRecordRecord, String> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.delete_record.user_id</code>.
     */
    public final TableField<DeleteRecordRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.delete_record.table_name</code>. 数据库表名
     */
    public final TableField<DeleteRecordRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "数据库表名");

    /**
     * The column <code>invoice.delete_record.context</code>. 删除数据内容
     */
    public final TableField<DeleteRecordRecord, String> CONTEXT = createField("context", org.jooq.impl.SQLDataType.CLOB, this, "删除数据内容");

    /**
     * The column <code>invoice.delete_record.create_by</code>.
     */
    public final TableField<DeleteRecordRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.delete_record.create_time</code>.
     */
    public final TableField<DeleteRecordRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>invoice.delete_record.update_by</code>.
     */
    public final TableField<DeleteRecordRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.delete_record.update_time</code>.
     */
    public final TableField<DeleteRecordRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>invoice.delete_record</code> table reference
     */
    public DeleteRecord() {
        this("delete_record", null);
    }

    /**
     * Create an aliased <code>invoice.delete_record</code> table reference
     */
    public DeleteRecord(String alias) {
        this(alias, DELETE_RECORD);
    }

    private DeleteRecord(String alias, Table<DeleteRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeleteRecord(String alias, Table<DeleteRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Invoice.INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeleteRecordRecord> getPrimaryKey() {
        return Keys.KEY_DELETE_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeleteRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<DeleteRecordRecord>>asList(Keys.KEY_DELETE_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeleteRecord as(String alias) {
        return new DeleteRecord(alias, this);
    }

    /**
     * Rename this table
     */
    public DeleteRecord rename(String name) {
        return new DeleteRecord(name, null);
    }
}
