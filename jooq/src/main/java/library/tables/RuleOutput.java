/**
 * This class is generated by jOOQ
 */
package library.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import library.Invoice;
import library.Keys;
import library.tables.records.RuleOutputRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleOutput extends TableImpl<RuleOutputRecord> {

    private static final long serialVersionUID = -433546065;

    /**
     * The reference instance of <code>invoice.rule_output</code>
     */
    public static final RuleOutput RULE_OUTPUT = new RuleOutput();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleOutputRecord> getRecordType() {
        return RuleOutputRecord.class;
    }

    /**
     * The column <code>invoice.rule_output.rule_id</code>.
     */
    public final TableField<RuleOutputRecord, String> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.rule_output.rule_output_name</code>.
     */
    public final TableField<RuleOutputRecord, String> RULE_OUTPUT_NAME = createField("rule_output_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>invoice.rule_output.rule_output_type</code>.
     */
    public final TableField<RuleOutputRecord, String> RULE_OUTPUT_TYPE = createField("rule_output_type", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>invoice.rule_output.created_time</code>.
     */
    public final TableField<RuleOutputRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>invoice.rule_output.updated_time</code>.
     */
    public final TableField<RuleOutputRecord, Timestamp> UPDATED_TIME = createField("updated_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>invoice.rule_output.created_by</code>.
     */
    public final TableField<RuleOutputRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.rule_output.updated_by</code>.
     */
    public final TableField<RuleOutputRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * Create a <code>invoice.rule_output</code> table reference
     */
    public RuleOutput() {
        this("rule_output", null);
    }

    /**
     * Create an aliased <code>invoice.rule_output</code> table reference
     */
    public RuleOutput(String alias) {
        this(alias, RULE_OUTPUT);
    }

    private RuleOutput(String alias, Table<RuleOutputRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleOutput(String alias, Table<RuleOutputRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Invoice.INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RuleOutputRecord> getPrimaryKey() {
        return Keys.KEY_RULE_OUTPUT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RuleOutputRecord>> getKeys() {
        return Arrays.<UniqueKey<RuleOutputRecord>>asList(Keys.KEY_RULE_OUTPUT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RuleOutputRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RuleOutputRecord, ?>>asList(Keys.RULE_OUTPUT_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleOutput as(String alias) {
        return new RuleOutput(alias, this);
    }

    /**
     * Rename this table
     */
    public RuleOutput rename(String name) {
        return new RuleOutput(name, null);
    }
}
