/**
 * This class is generated by jOOQ
 */
package library.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import library.Invoice;
import library.Keys;
import library.tables.records.DocumentItemRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentItem extends TableImpl<DocumentItemRecord> {

    private static final long serialVersionUID = 1952546977;

    /**
     * The reference instance of <code>invoice.document_item</code>
     */
    public static final DocumentItem DOCUMENT_ITEM = new DocumentItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DocumentItemRecord> getRecordType() {
        return DocumentItemRecord.class;
    }

    /**
     * The column <code>invoice.document_item.id</code>.
     */
    public final TableField<DocumentItemRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>invoice.document_item.fapiao_id</code>.
     */
    public final TableField<DocumentItemRecord, String> FAPIAO_ID = createField("fapiao_id", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>invoice.document_item.invoice_code_number</code>.
     */
    public final TableField<DocumentItemRecord, String> INVOICE_CODE_NUMBER = createField("invoice_code_number", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>invoice.document_item.key</code>.
     */
    public final TableField<DocumentItemRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>invoice.document_item.value</code>.
     */
    public final TableField<DocumentItemRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>invoice.document_item.business_type</code>.
     */
    public final TableField<DocumentItemRecord, String> BUSINESS_TYPE = createField("business_type", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>invoice.document_item.tenant_id</code>.
     */
    public final TableField<DocumentItemRecord, String> TENANT_ID = createField("tenant_id", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.document_item.create_by</code>.
     */
    public final TableField<DocumentItemRecord, String> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.document_item.create_time</code>.
     */
    public final TableField<DocumentItemRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>invoice.document_item.update_by</code>.
     */
    public final TableField<DocumentItemRecord, String> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.VARCHAR.length(36), this, "");

    /**
     * The column <code>invoice.document_item.update_time</code>.
     */
    public final TableField<DocumentItemRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>invoice.document_item.change_flag</code>. 是否人为修改过该项
     */
    public final TableField<DocumentItemRecord, Short> CHANGE_FLAG = createField("change_flag", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "是否人为修改过该项");

    /**
     * Create a <code>invoice.document_item</code> table reference
     */
    public DocumentItem() {
        this("document_item", null);
    }

    /**
     * Create an aliased <code>invoice.document_item</code> table reference
     */
    public DocumentItem(String alias) {
        this(alias, DOCUMENT_ITEM);
    }

    private DocumentItem(String alias, Table<DocumentItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private DocumentItem(String alias, Table<DocumentItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Invoice.INVOICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DocumentItemRecord, Long> getIdentity() {
        return Keys.IDENTITY_DOCUMENT_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DocumentItemRecord> getPrimaryKey() {
        return Keys.KEY_DOCUMENT_ITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DocumentItemRecord>> getKeys() {
        return Arrays.<UniqueKey<DocumentItemRecord>>asList(Keys.KEY_DOCUMENT_ITEM_PRIMARY, Keys.KEY_DOCUMENT_ITEM_DOCUMENT_ITEM_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocumentItem as(String alias) {
        return new DocumentItem(alias, this);
    }

    /**
     * Rename this table
     */
    public DocumentItem rename(String name) {
        return new DocumentItem(name, null);
    }
}
